service: serverless-REST-boilerplate

provider:
  name: aws
  runtime: nodejs10.x
  stage: ${opt:stage,'dev'}
  region: us-east-2

  environment:
    USERS_TABLE_NAME: ${self:custom.usersTableName}

  iamRoleStatements:
  - Effect: 'Allow'
    Action:
      - dynamodb:Query
      - dynamodb:Scan
      - dynamodb:GetItem
      - dynamodb:PutItem
      - dynamodb:UpdateItem
      - dynamodb:DeleteItem
    Resource:
      Fn::GetAtt:
        - usersTable
        - Arn

package:
  individually: true
  exclude:
   - ./**/*.md
   - .eslintrc.js
   - .prettierrc.js
   - .gitignore
   - offline.sh
   - .dynamodb/**

functions:
  register:
    handler: src/routes/users/register.default

    events:
      - http:
          path: /users/register
          method: post
          cors: true

resources:
  Resources:
    usersTable:
      Type: "AWS::DynamoDB::Table"
      Properties:
        TableName: ${self:custom.usersTableName}
        AttributeDefinitions:
        - AttributeName: "username"
          AttributeType: "S"
        # - AttributeName: "lastName"
        #   AttributeType: "S"
        KeySchema:
        - AttributeName: "username"
          KeyType: "HASH"
        # - AttributeName: "lastName"
        #   KeyType: "RANGE"

        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5

custom:
  usersTableName: ${self:service}-${self:provider.stage}-users
  stages:
    - dev
    - test
    - v1.0
  serverless-offline:
    prefix: ${self:provider.stage}
    port: 3000
    stage: ${self:provider.stage}
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true
  dynamodb:
    stages:
      - dev
    start:
      port: 8000
      inMemory: true
      heapInitial: 200m
      heapMax: 1g
      migrate: true
      seed: true
      convertEmptyValues: true

plugins:
  - serverless-stage-manager
  - serverless-webpack
  - serverless-dynamodb-local
  - serverless-offline
